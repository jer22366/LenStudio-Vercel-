.sliderContainer {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  perspective: 1000px; // 添加透視效果，增強視差感
  will-change: transform; // 優化性能
  transition: transform 0.2s ease-out;
}

.slideItem {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 1s ease-in-out, transform 0.5s ease-out;
  display: flex;
  flex-direction: column; // 改為縱向排列
  justify-content: flex-end; // 內容從底部開始排列
  align-items: flex-start; // 內容左對齊
  transform-origin: center center; // 確保從中心縮放
}

.slideImage {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform-origin: center center;
  transition: transform 0.2s ease-out;
}

.active {
  opacity: 1;
}

@keyframes slideUp {
  0% {
    transform: translateY(40px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.textCard {
  position: relative;
  left: 10vw; // 使用視窗寬度的相對單位
  margin-bottom: 10vh; // 從底部留出空間
  width: 50%; // 寬度使用百分比，會隨容器變化
  min-width: 250px; // 設置最小寬度，保證在小屏幕上的可讀性
  padding: 3vmin; // 使用視窗相對單位，在小屏幕上自動縮小
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  // 移除任何與視差效果相關的屬性
  transform: none !important; // 強制覆蓋可能的內聯樣式

  h1 {
    font-size: 4rem; // 字體大小隨視窗寬度變化
    margin-bottom: 0.2em; // 減少間距
    color: white; // 更改為白色以提高對比度
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); // 添加文字陰影提高可讀性
    opacity: 0; // 初始狀態為透明
    transform: translateY(40px); // 初始位置在下方
    transition: opacity 0.5s ease; // 只用於消失動畫
  }

  p {
    font-size: calc(0.9rem + 0.2vw); // 字體大小隨視窗寬度變化
    color: white; // 更改為白色以提高對比度
    line-height: 1.5;
    margin-bottom: 0.8em; // 減少與按鈕的間距
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); // 添加文字陰影提高可讀性
    opacity: 0; // 初始狀態為透明
    transform: translateY(40px); // 初始位置在下方
    transition: opacity 0.5s ease; // 只用於消失動畫
  }
}

// 當幻燈片為活躍狀態時應用出現動畫
.active .textCard {
  h1 {
    animation: slideUp 0.8s ease forwards;
    animation-delay: 0.2s; // 標題先出現
  }

  p {
    animation: slideUp 0.8s ease forwards;
    animation-delay: 0.4s; // 描述文字晚一點出現
  }
}

// 新的 Leica 風格按鈕
.slideButton {
  position: relative;
  padding: 12px 30px;
  border-radius: 50px;
  background-color: white;
  color: black;
  border: none;
  font-size: 16px;
  cursor: pointer;
  min-width: 180px;
  text-align: center;
  overflow: hidden;
  z-index: 1;
  margin-top: 1rem;

  // 橘色點
  &::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #e58e41;
    transition: background-color 0.3s ease;
    z-index: 2;
  }

  // 擴散背景
  &::after {
    content: '';
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    border-radius: 50%;
    background-color: #e58e41;
    transition: width 0.5s ease, height 0.5s ease;
    z-index: -1;
  }

  span {
    position: relative;
    z-index: 2;
    transition: color 0.3s ease;
    margin-left: 10px; // 為橘點留出空間
  }

  &:hover {
    // 懸停時的效果
    &::after {
      width: 800px; // 大到足以覆蓋整個按鈕
      height: 800px;
    }

    &::before {
      background-color: white;
    }

    span {
      color: white;
    }
  }
}

// 添加視差效果類
.parallaxEffect {
  transform-origin: 50% 50%;
}

// 為不同元素添加不同的視差速度
.parallaxSlow {
  transform: translateY(var(--parallax-translate-slow, 0));
  scale: var(--parallax-scale, 1);
}

.parallaxMedium {
  transform: translateY(var(--parallax-translate-medium, 0));
  scale: var(--parallax-scale, 1);
}

.parallaxFast {
  transform: translateY(var(--parallax-translate-fast, 0));
  scale: var(--parallax-scale, 1);
}

@media (max-width: 1200px){
  .textCard {
    left: 8vw;
    width: 100%;
    h1 {
      font-size: 3rem;
    }
  }
  .slideButton {
    min-width: 160px;
  }
}


/* 響應式調整 */
@media (max-width: 992px) {
  .textCard {
    left: 8vw;
    width: 100%;
    h1 {
      font-size: 3rem;
    }
  }
  .slideButton {
    min-width: 160px;
  }
}

@media (max-width: 768px) {
  .textCard {
    left: 5vw;
    width: 100%;
    padding: 20px;
    h1 {
      font-size: 2.5rem;
    }
  }
  .slideButton {
    min-width: 150px;
  }
}

@media (max-width: 576px) {
  .textCard {
    // left: 50%;
    transform: translateX(-50%);
    width: 85%;
    bottom: 0%;
    top: auto;
    h1 {
      font-size: 2rem;
    }
    p {
      font-size: 0.8rem;
    }
    .slideButton {
      width: 100%; // 小螢幕保持全寬
      min-width: 0; // 移除最小寬度約束
    }
  }
}
